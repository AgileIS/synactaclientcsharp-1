/* 
 * Synacta
 *
 * WebApi
 *
 * OpenAPI spec version: v1
 * Contact: bhofmann@agile-is.de
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DocumentVersion
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DocumentVersionTests
    {
        // TODO uncomment below to declare an instance variable for DocumentVersion
        //private DocumentVersion instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DocumentVersion
            //instance = new DocumentVersion();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DocumentVersion
        /// </summary>
        [Test]
        public void DocumentVersionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DocumentVersion
            //Assert.IsInstanceOfType<DocumentVersion> (instance, "variable 'instance' is a DocumentVersion");
        }

        /// <summary>
        /// Test the property 'Version'
        /// </summary>
        [Test]
        public void VersionTest()
        {
            // TODO unit test for the property 'Version'
        }
        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Test]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'FileSize'
        /// </summary>
        [Test]
        public void FileSizeTest()
        {
            // TODO unit test for the property 'FileSize'
        }
        /// <summary>
        /// Test the property 'ParentId'
        /// </summary>
        [Test]
        public void ParentIdTest()
        {
            // TODO unit test for the property 'ParentId'
        }
        /// <summary>
        /// Test the property 'ParentType'
        /// </summary>
        [Test]
        public void ParentTypeTest()
        {
            // TODO unit test for the property 'ParentType'
        }
        /// <summary>
        /// Test the property 'OdataContext'
        /// </summary>
        [Test]
        public void OdataContextTest()
        {
            // TODO unit test for the property 'OdataContext'
        }
        /// <summary>
        /// Test the property 'OdataReadLink'
        /// </summary>
        [Test]
        public void OdataReadLinkTest()
        {
            // TODO unit test for the property 'OdataReadLink'
        }
        /// <summary>
        /// Test the property 'FileodataNavigationLink'
        /// </summary>
        [Test]
        public void FileodataNavigationLinkTest()
        {
            // TODO unit test for the property 'FileodataNavigationLink'
        }
        /// <summary>
        /// Test the property 'RestoreodataNavigationLink'
        /// </summary>
        [Test]
        public void RestoreodataNavigationLinkTest()
        {
            // TODO unit test for the property 'RestoreodataNavigationLink'
        }
        /// <summary>
        /// Test the property 'FullODataLinkodataNavigationLink'
        /// </summary>
        [Test]
        public void FullODataLinkodataNavigationLinkTest()
        {
            // TODO unit test for the property 'FullODataLinkodataNavigationLink'
        }
        /// <summary>
        /// Test the property 'StandardODataLinkodataNavigationLink'
        /// </summary>
        [Test]
        public void StandardODataLinkodataNavigationLinkTest()
        {
            // TODO unit test for the property 'StandardODataLinkodataNavigationLink'
        }
        /// <summary>
        /// Test the property 'NoneODataLinkodataNavigationLink'
        /// </summary>
        [Test]
        public void NoneODataLinkodataNavigationLinkTest()
        {
            // TODO unit test for the property 'NoneODataLinkodataNavigationLink'
        }

    }

}
